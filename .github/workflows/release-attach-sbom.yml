name: 'Release: Attach SBOM'

on:
  release:
    types: [published]

jobs:
  generate-and-attach-sbom:
    name: Generate and Attach SBOM to Release
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      contents: write
      id-token: write
      attestations: write
    steps:
      - name: Checkout release tag
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          ref: ${{ github.event.release.tag_name }}

      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: 22.x

      - name: Setup corepack and pnpm
        run: |
          npm i -g corepack@0.33
          corepack enable

      - name: Restore build artifacts from cache
        uses: actions/cache/restore@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
        with:
          path: ./packages/**/dist
          key: ${{ github.event.release.tag_name }}-release:build
          fail-on-cache-miss: true

      - name: Install dependencies and pack packages
        run: |
          pnpm install --frozen-lockfile
          mkdir -p npm-packages
          pnpm pack -r --pack-destination ./npm-packages

      - name: Generate CycloneDX SBOM with Syft
        uses: anchore/sbom-action@b9a8bc8d2c19e9396f663e53c7b55848e98cf17c # v0.17.6
        with:
          path: ./npm-packages
          format: cyclonedx-json
          output-file: sbom-npm.cdx.json

      - name: Attest build provenance for npm packages
        uses: actions/attest-build-provenance@977bb37082e0bfde04bb18e63b0632b7b5a1c4a3 # v3.0.0
        with:
          subject-path: './npm-packages/*.tgz'

      - name: Attest SBOM for npm packages
        uses: actions/attest-sbom@4651f806c01d8637787e274ac3bdf724ef169f34 # v3.0.0
        with:
          subject-path: './npm-packages/*.tgz'
          sbom-path: 'sbom-npm.cdx.json'

      - name: Install Cosign
        uses: sigstore/cosign-installer@9e9de2292db7abb3f51b7f4808d98f0d347a8919 # v3.7.0

      - name: Sign SBOM (keyless)
        run: |
          # Sign SBOM using Cosign keyless signing with GitHub OIDC
          # This provides cryptographic proof of authenticity and integrity
          cosign sign-blob --yes --output-signature sbom-npm.cdx.sig --output-certificate sbom-npm.cdx.pem sbom-npm.cdx.json

      - name: Attach SBOM files to release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Upload SBOM files to the existing release
          gh release upload "${{ github.event.release.tag_name }}" \
            sbom-npm.cdx.json \
            sbom-npm.cdx.sig \
            sbom-npm.cdx.pem \
            --clobber || echo "⚠️ Failed to upload SBOM files to release"

          COMPONENT_COUNT=$(jq '.components | length' sbom-npm.cdx.json 2>/dev/null || echo "unknown")
          echo "✅ SBOM workflow completed"
          echo "📊 SBOM contains $COMPONENT_COUNT components"
          echo "🛡️ GitHub attestations created for packages"
